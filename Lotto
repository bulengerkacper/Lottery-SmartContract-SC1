pragma solidity ^0.4.19;

/* author @BulKac
OpenSource drawing lots in purpose of learning smart contracts */

/* To draw lots*/
contract TDL {

	uint64 public ticketPrize = 1;
	uint private jackpot;
	uint public ticketsSold;

	address[] public players;

	event TicketsBought(address accountAddress, uint amount);
	event LotteryWinnerSet(address accountAddress, uint jackpotAmount);
	event playerCharged(address accountAddres, uint chargedMoney);

	function TDL() {
		players = new address[];
	}

	function buyTicket() public returns (uint) {
		require (msg.value > ticketPrize);
	
		uint howManyTickets = msg.value/ticketPrize;
		for(uint counter = 0; counter < howManyTickets; counter++) {
			players.push(msg.sender);
		}
		uint realPrize = howManyTickets * ticketPrize;
		jackpot += realPrize;
		playerCharged(msg.sender, realPrize);
		msg.sender.transfer(msg.value-realPrize);
		tickets_sold += howManyTickets;
		return howManyTickets;
		
	}

	function getJackpot() constant returns (uint) {
		return balances[msg.sender];
	}

	function getTicketsSold() public returns (uint) {
		return ticketsSold;
	}

	function sendMoneyToWinnerEndLottery () payable {
	 	uint index = random() % players.length;
	 	LotteryWinnerSet(players[index], jackpotAmount);
		players[index].send(jackpot);
		delete players;
	}
}
